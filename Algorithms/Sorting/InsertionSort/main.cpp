#include <iostream>

/*
Сложность O(N^2)
Описание:
алгоритм выполняется на месте, требуется только 1 переменная, для хранения
экземпляра. Просматривать начинаем с 2 элемента, так как начиная с 1 го, будет
пустая операция выемки и вставки обратно
Вынимаем исследуемый элемент (сораняем в переменной).
Начиная с предыдущего элемента сравниваем его с исследуемым,
если условие сравнения выполняется продвигаем элементы вперед в поиске места
вставки исследуемого элемента. Так как внутренний цикл изменит счетчик на -1 на
1 раз больше, то искомый индекс втавки будет следующий тоесть +1;
*/

void insertionSort( int arr[], int l, int r ) {
  for ( int i = l; i <= r - 1; ++i ) {
    int el = arr[ i + 1 ];
    int j = i;
    for ( ; j >= 0 && el < arr[ j ]; j-- ) {
      arr[ j + 1 ] = arr[ j ];
    }
    arr[ j + 1 ] = el;
  }
}

int main( ) {
  int arr[] { 9, 8, 7, 6, 5, 4, 3, 2, 1 };
  insertionSort( arr, 0, 8 );
  for ( int i = 0; i <= 8; ++i ) {
    std::cout << arr[ i ] << ' ';
  }
}
