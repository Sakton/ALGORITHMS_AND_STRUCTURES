#include <iostream>

/*
Сложность O(logN)
!!Последовательность должна быть упорядочена
Алгоритм место (индекс) где находится элемент
Идея:
Каждый раз просматривается средний элемент интервала
если средний элемент меньше искомого, то искомый в правой половине -
отбрасываем из рассмотрения всю левую часть вместе с средним элементом
так как он уже проверен
если средний больше искомого, то элемент слева, отбрасываем правую часть
в каждой итерации интервал уменьшаетс вдвое.
продлаем до тех пор пока левый интервал не сравняется с правым, или левый не станет
больше правого - значит элемента нет.
*/

int BinarySearch( int arr[], int l, int r, int searchElem )
{
    while ( l <= r ) {
        int m = ( l + r ) / 2;
        if ( arr[ m ] == searchElem ) {
            return m;
        }
        if ( arr[ m ] < searchElem ) {
            l = m + 1;
        }
        if ( arr[ m ] > searchElem ) {
            r = m - 1;
        }
    }
    return -1;
}

int main( )
{
    int arr[] { 2, 4, 5, 6, 8, 9, 11, 13, 17, 19, 26, 35, 41, 44, 59 };
    std::cout << BinarySearch( arr, 0, 14, 8 );
}
